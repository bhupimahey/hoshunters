<?php 
 defined('BASEPATH') OR exit('No direct script access allowed');
 $scheme = 'http'.(isset($_SERVER['HTTPS']) ? 's' : '').'://';
 $config['base_url']	= $scheme.$_SERVER['HTTP_HOST'].'/';
 $config['site_title_info']	= 'Hosthunters';
 $config['admin_folder']='ecos_panel/';
 $config['admin_path']=$config['base_url'].$config['admin_folder'];
 define('admin_folder','ecos_panel/');
 define('admin_path',$config['base_url'].$config['admin_folder']);


 $config['customer_folder']='customers/';
 $config['customer_path']=$config['base_url'].$config['customer_folder'];
 define('customer_folder','customers/');
 define('customer_path',$config['base_url'].$config['customer_folder']);

 /*

 |--------------------------------------------------------------------------

 | Index File

 |--------------------------------------------------------------------------

|

| Typically this will be your index.php file, unless you've renamed it to

| something else. If you are using mod_rewrite to remove the page set this

| variable so that it is blank.

|

*/

$config['index_page'] = '';



/*

|--------------------------------------------------------------------------

| URI PROTOCOL

|--------------------------------------------------------------------------

|

| This item determines which server global should be used to retrieve the

| URI string.  The default setting of 'REQUEST_URI' works for most servers.

| If your links do not seem to work, try one of the other delicious flavors:

|

| 'REQUEST_URI'    Uses $_SERVER['REQUEST_URI']

| 'QUERY_STRING'   Uses $_SERVER['QUERY_STRING']

| 'PATH_INFO'      Uses $_SERVER['PATH_INFO']

|

| WARNING: If you set this to 'PATH_INFO', URIs will always be URL-decoded!

*/

$config['uri_protocol']	= 'AUTO';



/*

|--------------------------------------------------------------------------

| URL suffix

|--------------------------------------------------------------------------

|

| This option allows you to add a suffix to all URLs generated by CodeIgniter.

| For more information please see the user guide:

|

| https://codeigniter.com/user_guide/general/urls.html

*/

$config['url_suffix'] = '';



/*

|--------------------------------------------------------------------------

| Default Language

|--------------------------------------------------------------------------

|

| This determines which set of language files should be used. Make sure

| there is an available translation if you intend to use something other

| than english.

|

*/

$config['language']	= 'english';



/*

|--------------------------------------------------------------------------

| Default Character Set

|--------------------------------------------------------------------------

|

| This determines which character set is used by default in various methods

| that require a character set to be provided.

|

| See http://php.net/htmlspecialchars for a list of supported charsets.

|

*/

$config['charset'] = 'utf-8';



/*

|--------------------------------------------------------------------------

| Enable/Disable System Hooks

|--------------------------------------------------------------------------

|

| If you would like to use the 'hooks' feature you must enable it by

| setting this variable to TRUE (boolean).  See the user guide for details.

|

*/

$config['enable_hooks'] = TRUE;



/*

|--------------------------------------------------------------------------

| Class Extension Prefix

|--------------------------------------------------------------------------

|

| This item allows you to set the filename/classname prefix when extending

| native libraries.  For more information please see the user guide:

|

| https://codeigniter.com/user_guide/general/core_classes.html

| https://codeigniter.com/user_guide/general/creating_libraries.html

|

*/

$config['subclass_prefix'] = 'EXT_';



/*

|--------------------------------------------------------------------------

| Composer auto-loading

|--------------------------------------------------------------------------

|

| Enabling this setting will tell CodeIgniter to look for a Composer

| package auto-loader script in application/vendor/autoload.php.

|

|	$config['composer_autoload'] = TRUE;

|

| Or if you have your vendor/ directory located somewhere else, you

| can opt to set a specific path as well:

|

|	$config['composer_autoload'] = '/path/to/vendor/autoload.php';

|

| For more information about Composer, please visit http://getcomposer.org/

|

| Note: This will NOT disable or override the CodeIgniter-specific

|	autoloading (application/config/autoload.php)

*/

$config['composer_autoload'] = TRUE;

//$config['permitted_uri_chars'] = 'a-z 0-9~%.:_\-';

$config['permitted_uri_chars'] = '';



/*

|--------------------------------------------------------------------------

| Enable Query Strings

|--------------------------------------------------------------------------

|

| By default CodeIgniter uses search-engine friendly segment based URLs:

| example.com/who/what/where/

|

| By default CodeIgniter enables access to the $_GET array.  If for some

| reason you would like to disable it, set 'allow_get_array' to FALSE.

|

| You can optionally enable standard query string based URLs:

| example.com?who=me&what=something&where=here

|

| Options are: TRUE or FALSE (boolean)

|

| The other items let you set the query string 'words' that will

| invoke your controllers and its functions:

| example.com/index.php?c=controller&m=function

|

| Please note that some of the helpers won't work as expected when

| this feature is enabled, since CodeIgniter is designed primarily to

| use segment based URLs.

|

*/

$config['allow_get_array'] = TRUE;

$config['enable_query_strings'] = FALSE;

$config['controller_trigger'] = 'c';

$config['function_trigger'] = 'm';

$config['directory_trigger'] = 'd';



/*

|--------------------------------------------------------------------------

| Error Logging Threshold

|--------------------------------------------------------------------------

|

| You can enable error logging by setting a threshold over zero. The

| threshold determines what gets logged. Threshold options are:

|

|	0 = Disables logging, Error logging TURNED OFF

|	1 = Error Messages (including PHP errors)

|	2 = Debug Messages

|	3 = Informational Messages

|	4 = All Messages

|

| You can also pass an array with threshold levels to show individual error types

|

| 	array(2) = Debug Messages, without Error Messages

|

| For a live site you'll usually only enable Errors (1) to be logged otherwise

| your log files will fill up very fast.

|

*/

$config['log_threshold'] = 1;



/*

|--------------------------------------------------------------------------

| Error Logging Directory Path

|--------------------------------------------------------------------------

|

| Leave this BLANK unless you would like to set something other than the default

| application/logs/ directory. Use a full server path with trailing slash.

|

*/

$config['log_path'] = '';



/*

|--------------------------------------------------------------------------

| Log File Extension

|--------------------------------------------------------------------------

|

| The default filename extension for log files. The default 'php' allows for

| protecting the log files via basic scripting, when they are to be stored

| under a publicly accessible directory.

|

| Note: Leaving it blank will default to 'php'.

|

*/

$config['log_file_extension'] = '';



/*

|--------------------------------------------------------------------------

| Log File Permissions

|--------------------------------------------------------------------------

|

| The file system permissions to be applied on newly created log files.

|

| IMPORTANT: This MUST be an integer (no quotes) and you MUST use octal

|            integer notation (i.e. 0700, 0644, etc.)

*/

$config['log_file_permissions'] = 0644;



/*

|--------------------------------------------------------------------------

| Date Format for Logs

|--------------------------------------------------------------------------

|

| Each item that is logged has an associated date. You can use PHP date

| codes to set your own date formatting

|

*/

$config['log_date_format'] = 'Y-m-d H:i:s';



/*

|--------------------------------------------------------------------------

| Error Views Directory Path

|--------------------------------------------------------------------------

|

| Leave this BLANK unless you would like to set something other than the default

| application/views/errors/ directory.  Use a full server path with trailing slash.

|

*/

$config['error_views_path'] = '';



/*

|--------------------------------------------------------------------------

| Cache Directory Path

|--------------------------------------------------------------------------

|

| Leave this BLANK unless you would like to set something other than the default

| application/cache/ directory.  Use a full server path with trailing slash.

|

*/

$config['cache_path'] = '';



/*

|--------------------------------------------------------------------------

| Cache Include Query String

|--------------------------------------------------------------------------

|

| Whether to take the URL query string into consideration when generating

| output cache files. Valid options are:

|

|	FALSE      = Disabled

|	TRUE       = Enabled, take all query parameters into account.

|	             Please be aware that this may result in numerous cache

|	             files generated for the same page over and over again.

|	array('q') = Enabled, but only take into account the specified list

|	             of query parameters.

|

*/

$config['cache_query_string'] = FALSE;



/*

|--------------------------------------------------------------------------

| Encryption Key

|--------------------------------------------------------------------------

|

| If you use the Encryption class, you must set an encryption key.

| See the user guide for more info.

|

| https://codeigniter.com/user_guide/libraries/encryption.html

|

*/

$config['encryption_key'] = 'YTozOntpOjA7czo4OiIxNDExMjAxOCI7aToxO3M6MTI6InNpbHZlcjE4MTExNCI7aToyO3M6OToiZG9jdW1lbnRzIjt9';



/*

|--------------------------------------------------------------------------

| Session Variables

|--------------------------------------------------------------------------

|

| 'sess_driver'

|

|	The storage driver to use: files, database, redis, memcached

|

| 'sess_cookie_name'

|

|	The session cookie name, must contain only [0-9a-z_-] characters

|

| 'sess_expiration'

|

|	The number of SECONDS you want the session to last.

|	Setting to 0 (zero) means expire when the browser is closed.

|

| 'sess_save_path'

|

|	The location to save sessions to, driver dependent.

|

|	For the 'files' driver, it's a path to a writable directory.

|	WARNING: Only absolute paths are supported!

|

|	For the 'database' driver, it's a table name.

|	Please read up the manual for the format with other session drivers.

|

|	IMPORTANT: You are REQUIRED to set a valid save path!

|

| 'sess_match_ip'

|

|	Whether to match the user's IP address when reading the session data.

|

|	WARNING: If you're using the database driver, don't forget to update

|	         your session table's PRIMARY KEY when changing this setting.

|

| 'sess_time_to_update'

|

|	How many seconds between CI regenerating the session ID.

|

| 'sess_regenerate_destroy'

|

|	Whether to destroy session data associated with the old session ID

|	when auto-regenerating the session ID. When set to FALSE, the data

|	will be later deleted by the garbage collector.

|

| Other session cookie settings are shared with the rest of the application,

| except for 'cookie_prefix' and 'cookie_httponly', which are ignored here.

|

*/


$config['sess_driver'] = 'database';

$config['sess_cookie_name'] = '';

$config['sess_expiration'] = 0;

$config['sess_save_path'] = 'flats_sessions';

$config['sess_match_ip'] = TRUE;

$config['sess_time_to_update'] = 30000;

$config['sess_regenerate_destroy'] = FALSE;

$config['sess_encrypt_cookie']     = FALSE;



/*

|--------------------------------------------------------------------------

| Cookie Related Variables

|--------------------------------------------------------------------------

|

| 'cookie_prefix'   = Set a cookie name prefix if you need to avoid collisions

| 'cookie_domain'   = Set to .your-domain.com for site-wide cookies

| 'cookie_path'     = Typically will be a forward slash

| 'cookie_secure'   = Cookie will only be set if a secure HTTPS connection exists.

| 'cookie_httponly' = Cookie will only be accessible via HTTP(S) (no javascript)

|

| Note: These settings (with the exception of 'cookie_prefix' and

|       'cookie_httponly') will also affect sessions.

|

*/

$config['cookie_prefix']	= '';

$config['cookie_domain']	= '';

$config['cookie_path']		= '/';

$config['cookie_secure']	= FALSE;

$config['cookie_httponly'] 	= FALSE;



/*

|--------------------------------------------------------------------------

| Standardize newlines

|--------------------------------------------------------------------------

|

| Determines whether to standardize newline characters in input data,

| meaning to replace \r\n, \r, \n occurrences with the PHP_EOL value.

|

| This is particularly useful for portability between UNIX-based OSes,

| (usually \n) and Windows (\r\n).

|

*/

$config['standardize_newlines'] = FALSE;



/*

|--------------------------------------------------------------------------

| Global XSS Filtering

|--------------------------------------------------------------------------

|

| Determines whether the XSS filter is always active when GET, POST or

| COOKIE data is encountered

|

| WARNING: This feature is DEPRECATED and currently available only

|          for backwards compatibility purposes!

|

*/

$config['global_xss_filtering'] = FALSE;



/*

|--------------------------------------------------------------------------

| Cross Site Request Forgery

|--------------------------------------------------------------------------

| Enables a CSRF cookie token to be set. When set to TRUE, token will be

| checked on a submitted form. If you are accepting user data, it is strongly

| recommended CSRF protection be enabled.

|

| 'csrf_token_name' = The token name

| 'csrf_cookie_name' = The cookie name

| 'csrf_expire' = The number in seconds the token should expire.

| 'csrf_regenerate' = Regenerate token on every submission

| 'csrf_exclude_uris' = Array of URIs which ignore CSRF checks

*/

$config['csrf_protection'] = FALSE;

$config['csrf_token_name'] = 'transstatuscsrf';

$config['csrf_cookie_name'] = 'mytojenname';

$config['csrf_expire'] = 7200;

$config['csrf_regenerate'] = TRUE;

$config['csrf_exclude_uris'] = array();







/*

|--------------------------------------------------------------------------

| Output Compression

|--------------------------------------------------------------------------

|

| Enables Gzip output compression for faster page loads.  When enabled,

| the output class will test whether your server supports Gzip.

| Even if it does, however, not all browsers support compression

| so enable only if you are reasonably sure your visitors can handle it.

|

| Only used if zlib.output_compression is turned off in your php.ini.

| Please do not use it together with httpd-level output compression.

|

| VERY IMPORTANT:  If you are getting a blank page when compression is enabled it

| means you are prematurely outputting something to your browser. It could

| even be a line of whitespace at the end of one of your scripts.  For

| compression to work, nothing can be sent before the output buffer is called

| by the output class.  Do not 'echo' any values with compression enabled.

|

*/

$config['compress_output'] = FALSE;

/*

|--------------------------------------------------------------------------

| Master Time Reference

|--------------------------------------------------------------------------

|

| Options are 'local' or any PHP supported timezone. This preference tells

| the system whether to use your server's local time as the master 'now'

| reference, or convert it to the configured one timezone. See the 'date

| helper' page of the user guide for information regarding date handling.

|

*/

$config['time_reference'] = 'local';



/*

|--------------------------------------------------------------------------

| Rewrite PHP Short Tags

|--------------------------------------------------------------------------

|

| If your PHP installation does not have short tag support enabled CI

| can rewrite the tags on-the-fly, enabling you to utilize that syntax

| in your view files.  Options are TRUE or FALSE (boolean)

|

| Note: You need to have eval() enabled for this to work.

|

*/

$config['rewrite_short_tags'] = TRUE;


/*
|--------------------------------------------------------------------------

| Reverse Proxy IPs

|--------------------------------------------------------------------------

|

| If your server is behind a reverse proxy, you must whitelist the proxy

| IP addresses from which CodeIgniter should trust headers such as

| HTTP_X_FORWARDED_FOR and HTTP_CLIENT_IP in order to properly identify

| the visitor's IP address.

|

| You can use both an array or a comma-separated list of proxy addresses,

| as well as specifying whole subnets. Here are a few examples:

|

| Comma-separated:	'10.0.1.200,192.168.5.0/24'

| Array:		array('10.0.1.200', '192.168.5.0/24')

*/

$preferred_language_list=array();       
$preferred_language_list["0"]="Any Language";
$preferred_language_list["1"]="Mandarin";
$preferred_language_list["2"]="Spanish";
$preferred_language_list["3"]="English";
$preferred_language_list["4"]="Hindi";
$preferred_language_list["5"]="Bengali";
$preferred_language_list["6"]="Portuguese";
$preferred_language_list["7"]="Russian";
$preferred_language_list["8"]="Japanese";
$preferred_language_list["9"]="Turkish";
$preferred_language_list["10"]="Korean";
$preferred_language_list["11"]="French";
$preferred_language_list["12"]="German";
$preferred_language_list["13"]="Vietnamese";
$preferred_language_list["14"]="Urdu";
$preferred_language_list["15"]="Italian";
$config['preferred_language_list'] = $preferred_language_list;





$packages_roles=array();
$packages_roles["1"]="Create Listings";
$packages_roles["2"]="Browse Listings";
$packages_roles["3"]="Send Messages to <strong>Free to Message</strong> Listing";
$packages_roles["4"]="Access Mobile Numbers***";
$packages_roles["5"]="Access social Media Profile**";
$packages_roles["6"]="Send Messages to All Listing including <strong>Early Bird</strong>";
$packages_roles["7"]="Receive enquiry from <strong>upgraded members</strong>";
$config['packages_roles'] = $packages_roles;

$planvaliditylist=array();
$planvaliditylist["2"]="10 Days";
$planvaliditylist["3"]="20 Days";
$planvaliditylist["4"]="30 Days";
$planvaliditylist["5"]="1 Year";

$config['planvaliditylist'] = $planvaliditylist;


$place_looking_for=array();                       
$place_looking_for["1"]="Room(s) in an existing sharehouse";
$place_looking_for["2"]="Whole property for rent";
$place_looking_for["3"]="Studio";
$place_looking_for["4"]="Granny flats";
$place_looking_for["5"]="One bed flat";
$place_looking_for["6"]="Homestay";
$place_looking_for["7"]="Shared Room";
$place_looking_for["8"]="Student Accommondation";
$config['place_looking_for'] = $place_looking_for;

$property_reference_rooms=array();                       
$property_reference_rooms["1"]="Flexible";
$property_reference_rooms["2"]="Not Required";
$property_reference_rooms["3"]="Required";
$config['property_reference_rooms'] = $property_reference_rooms;

$property_reference_internet=array();            
$property_reference_internet["1"]="Any";
$property_reference_internet["2"]="Flexible";
$property_reference_internet["3"]="Required";
$config['property_reference_internet'] = $property_reference_internet;

$property_reference_bathroom=array();
$property_reference_bathroom["1"]="Any";
$property_reference_bathroom["2"]="Flexible";
$property_reference_bathroom["3"]="Ensuite or own required";
$property_reference_bathroom["4"]="Shared";

$config['property_reference_bathroom'] = $property_reference_bathroom;

$property_reference_parking=array();                       
$property_reference_parking["1"]="Flexible";
$property_reference_parking["2"]="Off-street required";
$property_reference_parking["3"]="On-street required";
$config['property_reference_parking'] = $property_reference_parking;

$property_reference_maxflatmates=array();                       
$property_reference_maxflatmates["1"]="Flexible";
$property_reference_maxflatmates["2"]="1 other";
$property_reference_maxflatmates["3"]="2 others";
$property_reference_maxflatmates["4"]="3 others";
$property_reference_maxflatmates["5"]="4 others";
$property_reference_maxflatmates["6"]="5 others";
$property_reference_maxflatmates["7"]="6 others";
$config['property_reference_maxflatmates'] = $property_reference_maxflatmates;


$length_of_stay=array();                       
$length_of_stay["1"]="1 Week";
$length_of_stay["2"]="2 Weeks";
$length_of_stay["3"]="1 Month";
$length_of_stay["4"]="2 Months";
$length_of_stay["5"]="3 Months";
$length_of_stay["6"]="4 Months";
$length_of_stay["7"]="6 Months";
$length_of_stay["8"]="9 Months";
$length_of_stay["9"]="+12 Months";
$config['length_of_stay'] = $length_of_stay;



$employment_status=array();                       
$employment_status["1"]="Working full-time";
$employment_status["2"]="Working part-time";
$employment_status["3"]="Working holiday";
$employment_status["4"]="Retired";
$employment_status["5"]="Unemployed";
$employment_status["6"]="Backpacker";
$employment_status["7"]="Student";
$employment_status["8"]="Professionals";

$config['employment_status'] = $employment_status;


$lifestyle_status=array();                       
$lifestyle_status["1"]="Smoker";
$lifestyle_status["2"]="LGBTI+";
$lifestyle_status["3"]="Pets";
$lifestyle_status["4"]="Children";
$config['lifestyle_status'] = $lifestyle_status;



$placeisfor_status=array();                       
$placeisfor_status["1"]="Me";
$placeisfor_status["2"]="Couple";
$placeisfor_status["3"]="Group";
$config['placeisfor_status'] = $placeisfor_status;


$gender_you_identify=array();                       
$gender_you_identify["1"]="Female";
$gender_you_identify["2"]="Male";
$config['gender_you_identify'] = $gender_you_identify;
$config['proxy_ips'] = '';



##########################    List My Place  #######################################


$accommodation_offering=array();                       
$accommodation_offering["1"]="Room(s) in an existing sharehouse";
$accommodation_offering["2"]="Whole property for rent";
$accommodation_offering["3"]="Student accommodation";
$accommodation_offering["4"]="Homestay";
$config['accommodation_offering'] = $accommodation_offering;



$type_of_property=array();                       
$type_of_property["3"]="2+ Bedrooms";
$type_of_property["4"]="1 Bedroom";
$type_of_property["5"]="Studio";
$type_of_property["6"]="Granny Flat";
$config['type_of_property'] = $type_of_property;



$property_type=array();                       
$property_type["1"]="House";
$property_type["2"]="Flat";
$property_type["3"]="2+ Bedrooms";
$property_type["4"]="1 Bedroom";
$property_type["5"]="Studio";
$property_type["6"]="Granny Flat";
$config['property_type'] = $property_type;


$total_bedrooms=array();                       
$total_bedrooms["1"]="2";
$total_bedrooms["2"]="3";
$total_bedrooms["3"]="4";
$total_bedrooms["4"]="5";
$total_bedrooms["5"]="6+";
$config['total_bedrooms'] = $total_bedrooms;

$total_bathrooms=array();                       
$total_bathrooms["1"]="1";
$total_bathrooms["2"]="2";
$total_bathrooms["3"]="3";
$total_bathrooms["4"]="4+";
$config['total_bathrooms'] = $total_bathrooms;

$parking_status=array();                       
$parking_status["1"]="No parking";
$parking_status["2"]="Off-street parking";
$parking_status["3"]="On-street Parking";
$config['parking_status'] = $parking_status;


$internet_status=array();                       
$internet_status["1"]="No internet";
$internet_status["2"]="Available but not inc in rent";
$internet_status["3"]="Included in rent";
$internet_status["4"]="Unlimited included in rent";
$config['internet_status'] = $internet_status;


$total_flatmates=array();                       
$total_flatmates["1"]="1";
$total_flatmates["2"]="2";
$total_flatmates["3"]="3";
$total_flatmates["4"]="4";
$total_flatmates["5"]="5";
$total_flatmates["6"]="6";
$total_flatmates["7"]="7+";
$config['total_flatmates'] = $total_flatmates;


$roomtypes_status=array();                       
$roomtypes_status["1"]="Private";
$roomtypes_status["2"]="Shared";
$config['roomtypes_status'] = $roomtypes_status;


$roomfurnishings_status=array();         
$roomfurnishings_status["1"]="Any";
//$roomfurnishings_status["2"]="Flexible";
$roomfurnishings_status["3"]="Furnished";
$roomfurnishings_status["4"]="Unfurnished";
$config['roomfurnishings_status'] = $roomfurnishings_status;

$bathrooms_status=array();                       
$bathrooms_status["1"]="Shared";
$bathrooms_status["2"]="Own";
$bathrooms_status["3"]="Ensuite";
$config['bathrooms_status'] = $bathrooms_status;

$bedsize_status=array();                       
$bedsize_status["1"]="Single";
$bedsize_status["2"]="Double";
$bedsize_status["3"]="Queen";
$bedsize_status["4"]="King";
$bedsize_status["5"]="None";
$config['bedsize_status'] = $bedsize_status;


$room_furnishing_features=array();                       
$room_furnishing_features["1"]="Bed side table";
$room_furnishing_features["2"]="Wardrobe";
$room_furnishing_features["3"]="Drawers";
$room_furnishing_features["4"]="Air conditioner";
$room_furnishing_features["5"]="Heater";
$room_furnishing_features["6"]="Desk";
$room_furnishing_features["7"]="Lamp";
$room_furnishing_features["8"]="Chair";
$room_furnishing_features["9"]="Couch";
$room_furnishing_features["10"]="TV";
$room_furnishing_features["11"]="Balcony";
$room_furnishing_features["12"]="Door lock";
$room_furnishing_features["13"]="Kitchenette";
$config['room_furnishing_features'] = $room_furnishing_features;

$bond_status=array();                       
$bond_status["1"]="None";
$bond_status["2"]="1 Week";
$bond_status["3"]="2 Weeks";
$bond_status["4"]="3 Weeks";
$bond_status["5"]="4 Weeks";
$config['bond_status'] = $bond_status;


$bills_status=array();                       
$bills_status["1"]="Additional to the rent";
$bills_status["2"]="Some included in the rent";
$bills_status["3"]="Included in rent";
$config['bills_status'] = $bills_status;


$flatmatespref_status=array();                       
$flatmatespref_status["1"]="Anyone";
$flatmatespref_status["2"]="Females only";
$flatmatespref_status["3"]="Males only";
$flatmatespref_status["4"]="Female or male (no couples)";
$flatmatespref_status["5"]="Couple";
$flatmatespref_status["6"]="No preference";

$config['flatmatespref_status'] = $flatmatespref_status;


$flatmatespref_accepting=array();                       
$flatmatespref_accepting["1"]="Backpackers";
$flatmatespref_accepting["2"]="Students";
$flatmatespref_accepting["3"]="Smokers";
$flatmatespref_accepting["4"]="LGBTI+";
$flatmatespref_accepting["5"]="40+ years olds";
$flatmatespref_accepting["6"]="Children";
$flatmatespref_accepting["7"]="Pets";
$flatmatespref_accepting["8"]="Retirees";
$flatmatespref_accepting["9"]="On welfare";
$flatmatespref_accepting["10"]="Professionals";
$config['flatmatespref_accepting'] = $flatmatespref_accepting;


#############   Report Property ####################
$report_property_list=array();
$report_property_list[""]="Please Select";
$report_property_list["1"]="No longer available";
$report_property_list["2"]="Listing contains incorrect information";
$report_property_list["3"]="Suspected scammer";
$report_property_list["4"]="Contains offensive or inappropriate content";
$report_property_list["5"]="Listing contains contact information";
$report_property_list["6"]="Listing contains copyright material";
$report_property_list["7"]="Bug/Problem with website";
$report_property_list["8"]="Spam/Commercial unrelated to share accommodation";
$report_property_list["9"]="Concerned about overcrowding at this property";
$config['report_property_list'] = $report_property_list;



$home_searchby_list=array();                       
$home_searchby_list["1"]="Photos first";
$report_property_list["2"]="Newest listings";
$home_searchby_list["3"]="Cheapest (rent low to high)";
$home_searchby_list["4"]="Dearest (rent high to low)";
$home_searchby_list["5"]="Available soonest";
$home_searchby_list["6"]="Active most recently";
$config['home_searchby_list'] = $home_searchby_list;

$home_searchflats_list=array();                       
$home_searchflats_list["1"]="Photos first";
$home_searchflats_list["2"]="Newest listings";
$home_searchflats_list["3"]="Active most recently";
$home_searchflats_list["4"]="Budget (lowest to highest)";
$home_searchflats_list["5"]="Move date soonest";
$config['home_searchflats_list'] = $home_searchflats_list;


$StatusList=array();
$StatusList["1"]="Enabled";
$StatusList["0"]="Disabled";
$config['StatusList'] = $StatusList;





